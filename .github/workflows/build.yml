name: Build and Release PDF Watermark Remover
permissions:
  contents: read
  pull-requests: write
  
on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Run when tag is pushed starting with 'v'
  workflow_dispatch:  # Allow manual triggers

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'  # Enable pip caching
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Get version from file
      id: get_version
      run: |
        if (Test-Path version.txt) {
          $version = Get-Content version.txt
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        } else {
          echo "VERSION=1.0" >> $env:GITHUB_OUTPUT
        }
        
        # Check if this is a tag build
        if ("${{ github.ref }}".StartsWith('refs/tags/')) {
          echo "IS_RELEASE=true" >> $env:GITHUB_OUTPUT
        } else {
          echo "IS_RELEASE=false" >> $env:GITHUB_OUTPUT
        }
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=icon_remove_watermark.ico --add-data "version.txt;." remove_watermark.py
        
        # Rename the output file to include version
        $version = "${{ steps.get_version.outputs.VERSION }}"
        Rename-Item -Path "dist\remove_watermark.exe" -NewName "Suppression_de_Filigrane_PDF-$version.exe"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Suppression_de_Filigrane_PDF-${{ steps.get_version.outputs.VERSION }}
        path: |
          dist/*.exe
        retention-days: 90
    
    - name: Create GitHub Release
      if: steps.get_version.outputs.IS_RELEASE == 'true'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/Suppression_de_Filigrane_PDF-${{ steps.get_version.outputs.VERSION }}.exe
        name: Version ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        body_path: ../CHANGELOG.md
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload build artifacts for development
      if: steps.get_version.outputs.IS_RELEASE != 'true'
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          build/
          dist/
          *.spec
        retention-days: 14  # Keep only for 14 days for development builds
